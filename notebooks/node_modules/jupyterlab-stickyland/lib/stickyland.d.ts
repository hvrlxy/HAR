import { IDragEvent } from '@lumino/dragdrop';
import { NotebookPanel } from '@jupyterlab/notebook';
import { StickyTab } from './tab';
import { StickyContent } from './content';
import { FloatingWindow } from './floating';
export declare class StickyLand {
    node: HTMLElement;
    header: HTMLElement;
    stickyTab: StickyTab;
    stickyContent: StickyContent | null;
    floatingWindows: FloatingWindow[];
    constructor(panel: NotebookPanel);
    /**
     * Allow users to drag the bottom left corner to resize the container
     */
    enableResize: () => void;
    /**
     * Handle the dragging on the resize handle on the bottom left corner
     * @param e Mouse event
     */
    resizeMousedownHandler: (e: Event) => void;
    /**
     * Style the header so that users can reposition StickyLand.
     */
    initHeader: () => void;
    headerMousedownHandler: (e: Event) => void;
    isHidden: () => boolean;
    hide: () => void;
    show: () => void;
    /**
     * Handle drag drop event
     *
     * ### Note
     * https://jupyterlab.github.io/lumino/dragdrop/interfaces/idragevent.html
     * We need to call preventDefault() to cancel (dispose) the event to have our
     * own action
     *
     * @param event Lumino IDragEVent
     */
    dragDropHandler: (event: IDragEvent) => void;
    /**
     * Handle drag enter event
     *
     * ### Note
     * https://jupyterlab.github.io/lumino/dragdrop/interfaces/idragevent.html
     * We need to call preventDefault() to cancel (dispose) the event to have our
     * own action
     *
     * @param event Lumino IDragEVent
     */
    dragEnterHandler: (event: IDragEvent) => void;
    /**
     * Handle drag over events
     *
     * ### Note
     * https://jupyterlab.github.io/lumino/dragdrop/interfaces/idragevent.html
     * We need to call preventDefault() to cancel (dispose) the event to have our
     * own action
     *
     * @param event Lumino IDragEVent
     */
    dragOverHandler: (event: IDragEvent) => void;
    /**
     * Handle drag leave event
     *
     * ### Note
     * https://jupyterlab.github.io/lumino/dragdrop/interfaces/idragevent.html
     * We need to call preventDefault() to cancel (dispose) the event to have our
     * own action
     *
     * @param event Lumino IDragEVent
     */
    dragLeaveHandler: (event: IDragEvent) => void;
}
